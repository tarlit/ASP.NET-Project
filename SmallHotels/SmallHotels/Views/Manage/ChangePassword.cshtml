@model SmallHotels.Models.ManageViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<div class="container">
    <div class="row card-only">
        <div class="col-md-10 col-md-offset-1">
            <div class="col-md-6 col-md-offset-3 text-center">
                <div class="card login-form">
                    <div class="card-content card-login">
                        @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>Change password</h4>
                            <hr />
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                            <div class="login-credentials">
                                <div class="input-field">
                                    @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
                                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-field login-password-fieldbox">
                                    @Html.LabelFor(m => m.NewPassword, new { @class = "control-label" })
                                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-field login-password-fieldbox">
                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <input type="submit" value="Change password" class="btn btn-success btn-login" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}